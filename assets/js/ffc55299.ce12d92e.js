"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[965],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=l(r),m=a,f=u["".concat(c,".").concat(m)]||u[m]||d[m]||s;return r?n.createElement(f,i(i({ref:t},p),{},{components:r})):n.createElement(f,i({ref:t},p))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,i=new Array(s);i[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[u]="string"==typeof e?e:a,i[1]=o;for(var l=2;l<s;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1383:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var n=r(7462),a=(r(7294),r(3905));const s={},i="Process testing",o={unversionedId:"processtest",id:"processtest",title:"Process testing",description:"Definition",source:"@site/additional/02-bestpractice/processtest.md",sourceDirName:".",slug:"/processtest",permalink:"/additional/bestpractice/processtest",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Data management",permalink:"/additional/bestpractice/datamanagement"},next:{title:"Record actions",permalink:"/additional/bestpractice/record-actions"}},c={},l=[{value:"Definition",id:"definition",level:2},{value:"Characteristics",id:"characteristics",level:2},{value:"Structure",id:"structure",level:2},{value:"Tips and tricks",id:"tips-and-tricks",level:2},{value:"Feedback?",id:"feedback",level:2}],p={toc:l},u="wrapper";function d(e){let{components:t,...s}=e;return(0,a.kt)(u,(0,n.Z)({},p,s,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"process-testing"},"Process testing"),(0,a.kt)("h2",{id:"definition"},"Definition"),(0,a.kt)("p",null,"A process test, chain-test or end-to-end test consists of several transactions, that tests the integration between functions in one or multiple systems."),(0,a.kt)("h2",{id:"characteristics"},"Characteristics"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"A process test is executed on one or more Mendix Apps, in multiple sessions by one or more users."),(0,a.kt)("li",{parentName:"ul"},"A process test generally creates data that can be visually inspected in the Mendix app being tested, if not cleaned up.")),(0,a.kt)("h2",{id:"structure"},"Structure"),(0,a.kt)("p",null,"Processes that need to be tested will have different frequencies where they are updated. Therefore it is recommended to use below structure in MTA:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"One test configuration per Mendix application for one process test."),(0,a.kt)("li",{parentName:"ul"},"One test suite for cleaning up test data, one test suite for creating (master)data, and one or more test suites per (sub)process for process testing."),(0,a.kt)("li",{parentName:"ul"},"Data variation on the test suite level.")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"The process test structure",src:r(2785).Z,width:"1285",height:"500"})),(0,a.kt)("h2",{id:"tips-and-tricks"},"Tips and tricks"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Perform a ",(0,a.kt)("strong",{parentName:"li"},"Product Risk Analysis")," (PRA) to determine which process to test first. "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Include a business representative")," (like a Product Owner) in your PRA."),(0,a.kt)("li",{parentName:"ul"},"Have process tests created, executed and maintained by ",(0,a.kt)("strong",{parentName:"li"},"testers and developers")," together."),(0,a.kt)("li",{parentName:"ul"},"Use MTA's ",(0,a.kt)("strong",{parentName:"li"},"test generation by recording")," feature as a starting point."),(0,a.kt)("li",{parentName:"ul"},"Put the ",(0,a.kt)("strong",{parentName:"li"},"cleanup script before the test script"),", and if other users are hindered by your results, also after the test script."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Include asserts")," to have MTA check the results automatically instead of manually inspecting them. "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Use datavariation instead of test duplication"),".")),(0,a.kt)("h2",{id:"feedback"},"Feedback?"),(0,a.kt)("p",null,"Missing anything? ",(0,a.kt)("a",{parentName:"p",href:"mailto:support@menditect.com"},"Let us know!")),(0,a.kt)("p",null,"Last updated 1 March 2024"))}d.isMDXComponent=!0},2785:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/bp_pt_01-90c1846c7dfe1f093feea27597510201.png"}}]);