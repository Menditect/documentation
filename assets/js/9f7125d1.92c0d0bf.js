"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1670],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(n),m=a,f=c["".concat(s,".").concat(m)]||c[m]||d[m]||o;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4428:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={},i="Handle files",l={unversionedId:"handle-files",id:"handle-files",title:"Handle files",description:"MTA does not (yet) allow uploading a FileDocument into your App.",source:"@site/additional/01-howtos/handle-files.md",sourceDirName:".",slug:"/handle-files",permalink:"/additional/howtos/handle-files",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Get MTA certified",permalink:"/additional/howtos/get-mta-certified"},next:{title:"Import plugin",permalink:"/additional/howtos/import-plugin"}},s={},p=[{value:"Feedback?",id:"feedback",level:2}],u={toc:p},c="wrapper";function d(e){let{components:t,...o}=e;return(0,a.kt)(c,(0,r.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"handle-files"},"Handle files"),(0,a.kt)("p",null,"MTA does not (yet) allow uploading a ",(0,a.kt)("strong",{parentName:"p"},"FileDocument")," into your App."),(0,a.kt)("p",null,"This also means, that using Binary attributes is not (yet) supported."),(0,a.kt)("p",null,"If it is necessary to test a process that includes or requires uploading a file, it is recommended to perform these steps:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Create (if not yet exists) an MTA extension module in the tested App."),(0,a.kt)("li",{parentName:"ul"},"Add an entity that inherits from FileDocument."),(0,a.kt)("li",{parentName:"ul"},"Add an attribute that can be used to uniquely identify an uploaded file."),(0,a.kt)("li",{parentName:"ul"},"Build a page to upload files into this entity."),(0,a.kt)("li",{parentName:"ul"},"Create a microflow with only a single (Java) Duplicate File Document action from the Community Commons module. It should look like this:\n",(0,a.kt)("img",{alt:"Duplicate File Document microflow",src:n(6863).Z,width:"457",height:"240"}))),(0,a.kt)("p",null,"Now, it is possible to use this pattern in a Test Case, to test processes that require a file:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Teststep that Creates an empty filedocument as used in the tested process (for example, a 'TemplateDocument' as is used in the Excel Importer)."),(0,a.kt)("li",{parentName:"ol"},"Persist (to ensure the object is saved to the database, otherwise the Java action won't work)."),(0,a.kt)("li",{parentName:"ol"},"Teststep that Retrieves the filedocument from the MTA extension module's entity."),(0,a.kt)("li",{parentName:"ol"},"Microflow call to the abovementioned microflow with parameters: teststep 1 as Target, and teststep 3 as Source."),(0,a.kt)("li",{parentName:"ol"},"Other logic to perform the actual test."),(0,a.kt)("li",{parentName:"ol"},"Optional delete logic to clean up.")),(0,a.kt)("h2",{id:"feedback"},"Feedback?"),(0,a.kt)("p",null,"Missing anything? ",(0,a.kt)("a",{parentName:"p",href:"mailto:support@menditect.com"},"Let us know!")),(0,a.kt)("p",null,"Last updated 21 august 2023"))}d.isMDXComponent=!0},6863:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/duplicate-filedoc-c0da4b65306de6da1a175be963cc0b5a.png"}}]);