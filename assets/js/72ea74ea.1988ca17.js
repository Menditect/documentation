"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9422],{3905:(e,t,n)=>{n.d(t,{Zo:()=>h,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},h=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,h=l(e,["components","mdxType","originalType","parentName"]),u=c(n),p=a,f=u["".concat(s,".").concat(p)]||u[p]||d[p]||o;return n?r.createElement(f,i(i({ref:t},h),{},{components:n})):r.createElement(f,i({ref:t},h))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},1187:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_class_name:"hidden"},i="CREATE A FRONTEND TEST WITH THE MENDITECT PLAYWRIGHT MODULE",l={unversionedId:"design-tests/playwright-test",id:"design-tests/playwright-test",title:"CREATE A FRONTEND TEST WITH THE MENDITECT PLAYWRIGHT MODULE",description:"This section describes how to create a frontend test using Playwright for a Responsive Web Mendix App.",source:"@site/additional/01-howtos/03-design-tests/playwright-test.md",sourceDirName:"03-design-tests",slug:"/design-tests/playwright-test",permalink:"/additional/howtos/design-tests/playwright-test",draft:!1,tags:[],version:"current",frontMatter:{sidebar_class_name:"hidden"},sidebar:"tutorialSidebar",previous:{title:"Know when to adapt to next revision",permalink:"/additional/howtos/design-tests/know-when-to-adapt-revision"},next:{title:"Run your first test in MTA",permalink:"/additional/howtos/run-tests/run-first-test"}},s={},c=[{value:"IN SHORT",id:"in-short",level:2},{value:"DEFINE THE TEST FLOW",id:"define-the-test-flow",level:2},{value:"CHOOSING THE RIGHT LOCATORS",id:"choosing-the-right-locators",level:2},{value:"CLICK ELEMENT",id:"click-element",level:3},{value:"NAMING CONVENTIONS",id:"naming-conventions",level:2}],h={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"create-a-frontend-test-with-the-menditect-playwright-module"},"CREATE A FRONTEND TEST WITH THE MENDITECT PLAYWRIGHT MODULE"),(0,a.kt)("p",null,"This section describes how to create a frontend test using Playwright for a Responsive Web Mendix App.\nPlaywright is a library with which you can locate elements on a web page and execute actions on these elements.\nSee ",(0,a.kt)("a",{parentName:"p",href:"https://playwright.dev/java/"},"https://playwright.dev/java/")," for the relevant Playwright documentation."),(0,a.kt)("h2",{id:"in-short"},"IN SHORT"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Start by importing the Menditect Playwright module. This module needs the playwright driver bundle jar file in your userlib directory. @@DEPENDENCY? The module uses an Object model to define which locators and which actions to play in sequence. @@WHY?"),(0,a.kt)("li",{parentName:"ul"},"Start by calling the Create_Browser, Create_BrowserContext and Create_Page microflows. "),(0,a.kt)("li",{parentName:"ul"},"Create a PlaywrightTest object that will be used to associate the list of objects to. "),(0,a.kt)("li",{parentName:"ul"},"Add Locators and Actions to the object list using the corresponding microflows. "),(0,a.kt)("li",{parentName:"ul"},"At the end, call the Execute_Playwright microflow that executes everything in the list and returns a result.")),(0,a.kt)("h2",{id:"define-the-test-flow"},"DEFINE THE TEST FLOW"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"For defining the test flow, note what data is needed to recreate this exact flow. "),(0,a.kt)("li",{parentName:"ul"},"Manually go through the pages and carefully note each action taken. Use a (Playwright) recorder if this helps."),(0,a.kt)("li",{parentName:"ul"},"For each element that is touched, note the element type, the label or text for the element, and the value that is entered or selected."),(0,a.kt)("li",{parentName:"ul"})),(0,a.kt)("h2",{id:"choosing-the-right-locators"},"CHOOSING THE RIGHT LOCATORS"),(0,a.kt)("p",null,"There are two types of Locator microflows:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Page locators, starting with Page_\nUse these if you expect to uniquely identify an element on the page. The microflow takes the Page as a parameter."),(0,a.kt)("li",{parentName:"ul"},"Chained locators, starting with Locator",(0,a.kt)("em",{parentName:"li"},"\nUse these if using any of the Page")," microflows is not specific enough (leads to a strict mode violation). The microflow takes the Locator as a parameter.")),(0,a.kt)("p",null,"NOTE: Chaining multiple locators sometimes only works when performed in a certain order. @@WHY? "),(0,a.kt)("p",null,"Defining which locator to use best can be difficult. First, define what you want to do with the element on the page. Then, try low-maintainance locators first. Xpath is always the last resort."),(0,a.kt)("h3",{id:"click-element"},"CLICK ELEMENT"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The least flaky locator is the Text or Label locator. Using this locator has preference over other locators. For any clickable element, use the Page_Get_By_Label or Page_Get_By_Text locator action. If there are multiple clickable elements, chain with any of below."),(0,a.kt)("li",{parentName:"ul"},"If the element does not contain text that can be filtered, use the Page_Get_By_Role locator. "),(0,a.kt)("li",{parentName:"ul"},"If the role cannot be determined, try using other locators, like Alt_Text or Placeholder."),(0,a.kt)("li",{parentName:"ul"},"If that does not work, try surrounding the element with a container that is given a specific class. @@DOESTHISWORK?"),(0,a.kt)("li",{parentName:"ul"},"Usually less successful for Mendix projects, but the Get_By_Title and Get_By_TestId could work."),(0,a.kt)("li",{parentName:"ul"},'Using Get_By_Selector (with "xpath=xxxx") will ',(0,a.kt)("em",{parentName:"li"},"always")," yield a successful result, but will break with any change in the layout.")),(0,a.kt)("h2",{id:"naming-conventions"},"NAMING CONVENTIONS"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"use POM_ (Playwright Object Model) as prefix for microflows that ")),(0,a.kt)("h1",{id:"how-to-use-mta-to-execute-your-frontend-test"},"HOW TO USE MTA TO EXECUTE YOUR FRONTEND TEST"))}d.isMDXComponent=!0}}]);